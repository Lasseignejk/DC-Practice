/* https://www.youtube.com/watch?v=NCLdf661ILE */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    height: 100vh;
    overflow: hidden;
    background: linear-gradient(45deg, #061de3, #e306ca);
    font-family: Arial, Helvetica, sans-serif;
    color: rgb(211, 211, 211);
    display: flex;
    justify-content: center;
    align-items: center;
}

/* add a perspective value to make the transition look more... 3d. without it, you can kinda tell that the image is just compressing down and then the back slowly grows to take its place. do a small value to make it look crazy, do a larger value to make the animation smoother */
.container {
    width: 350px;
    height: 500px;
    perspective: 800px;
}

.container:hover > .card{
    cursor: pointer;
    transform: rotateY(180deg);
}

/* to make the cards sit on top of each other, edit the div with the 'card' class */
.card {
    height: 100%;
    width: 100%;
    position: relative;
    transition: transform 1500ms;
    /* transform-style dictates if the children of the 'card' element are positioned in the 3D space or are flattened. For this tutorial, we used preserve-3D. if we change it to flat, the back of the card won't show up  */
    transform-style: preserve-3d;
}



.front, .back {
    height: 100%;
    width: 100%;
    border-radius: 2rem;
    box-shadow: 0 0 5px 2px rgba(50, 50, 50, 0.25);
    position: absolute;
    /* sets whether the back face of an element is visible when turned towards the user. if we change it to visible, we won't be able to see the front, just the back, and with all the text backwards. */
    backface-visibility: hidden;
}

.front {
    background-image: url(https://source.unsplash.com/random/350x500);
}

.back {
    background-color: #3a3a3a;
    /* we start with it transformed so when we transform on the hover, the text is facing the right direction */
    transform: rotateY(180deg);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 5rem;
}